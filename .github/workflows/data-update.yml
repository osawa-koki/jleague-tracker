name: data-update

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  fetch_game_results_by_year:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: Install packages
      run: |
        sudo apt update
        sudo apt install -y jq
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
    - name: Install poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Install dependencies
      run: poetry install --no-root --only main
    - name: Execute data update
      run: poetry run python ./py-app/fetch_game_results_by_year/main.py
    - id: has_changes
      name: Check if the file exists
      run: |
        if [[ -z $(git status --porcelain) ]]; then
          echo "No changes to commit"
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "Changes to commit"
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi
    - id: set_branch_name
      name: Set branch name
      if: ${{ steps.has_changes.outputs.has_changes == 'true' }}
      run: |
        echo "branch_name=data-update/$(date +'%Y-%m-%d')_${{ github.run_id }}" >> $GITHUB_OUTPUT
    - name: Create new branch
      if: ${{ steps.has_changes.outputs.has_changes == 'true' }}
      run: |
        git checkout -b ${{ steps.set_branch_name.outputs.branch_name }}
    - name: Commit changes
      if: ${{ steps.has_changes.outputs.has_changes == 'true' }}
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git add .
        git commit -m "Update data"
        git push -u origin ${{ steps.set_branch_name.outputs.branch_name }}
    - id: create_pr
      name: Create pull request
      if: ${{ steps.has_changes.outputs.has_changes == 'true' }}
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        PR_URL=$(gh pr create --title "Update data ($(date +'%Y-%m-%d'))" --body "Update data ($(date +'%Y-%m-%d'))")
        echo "pr_url=$PR_URL" >> $GITHUB_OUTPUT
    - name: Wait for PR to be mergeable
      if: ${{ steps.has_changes.outputs.has_changes == 'true' }}
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        TIMEOUT=60
        INTERVAL=10
        START_TIME=$(date +%s)
        while true; do
          CURRENT_TIME=$(date +%s)
          if (( CURRENT_TIME - START_TIME >= TIMEOUT )); then
            echo "timeout: pr is not mergeable..."
            exit 1
          fi
          MERGEABLE=$(gh pr view ${{ steps.create_pr.outputs.pr_url }} --json mergeable | jq -r '.mergeable')
          if [ "$MERGEABLE" = "MERGEABLE" ]; then
            echo "PR is mergeable!"
            exit 0
          else
            echo "PR is not mergeable..."
            echo "status: $MERGEABLE"
            echo "retry after $INTERVAL seconds..."
          fi
          sleep $INTERVAL
        done
    - name: Merge pull request
      if: ${{ steps.has_changes.outputs.has_changes == 'true' }}
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        gh pr merge --merge --auto ${{ steps.create_pr.outputs.pr_url }}
